---
title: Boom Goes the Nuke. TDD is Dead Play-by-Play.
tags:
---

![](<%= asset_path(:images, 'nukes.png') %>)

At Rails Conference 2014, David Heinemeier Hansson (DHH) delivered the kickoff keynote, where in one fail swoop, he killed Test Driven Development (TDD), essentially proclaiming TDD as no more than a cheap diet fad that ruins the design of software and also makes you feel FAT (not PHAT).
In fact, if you practice TDD, you are probably just another stupid, irrational zealot.

Okay - maybe not exactly like that, but DHH’s delivery was polarizing to say the least, and consequently, the above is what a lot of people “heard.” They heard, “TDD is Dead”, or “Testing is Dead", and as such, he might as well have nuked the crowd with an atomic bomb, because the fallout is still reverberating.

With this post, I aim to provide you with a summarized play-by-play to get you headed down the path of your own research and opinion formation. For a noob like me, the dramatic ping-pong amongst some of the bigger players in the community has been illuminating, and at times, hysterical. I LOVE the passion and fervor. Whatever your opinion, both sides bring up great fodder for debate — prickly in delivery or not. 

Let’s get this party started…

**Tuesday, April 22:** And the shot rang out&hellip;   <a href="https://www.youtube.com/watch?v=9LfmrkyP81M" target="blank">DHH Keynote</a>

It was a fine sunny day in Chicago, not too cold, but still damn windy. People were packing into the Sheraton Ballroom for the opening Keynote from DHH. The anticipation and skepticism were heavy in the room, because for many, DHH evokes a love or hate reaction, and apparently he is known for "stirring the pot." Any pot. He is a pot-stirrer-extraordinaire, as I am to understand from those who know him personally, or have been around him in the community over the years.

In his keynote, DHH presents the argument that Computer Science and Writing Software are very different, and that too many of us associate (or attempt to associate) incorrectly, which has resulted in some unintended consequences, including perpetuating the impostor syndrome, and fostering a stifling Dogma of code laws and practices.  He positions that in the world of writing software, many of us are too concerned with being a “scientist”. The result is that we constantly seek to invoke rules, laws, universal truths that mandate how things should be authored to qualify as good, “right” code. A doctrine for judging the clean code from the “dirty code”.

He posits that as writers of software, when we perpetuate a collection of beliefs or practices mistakenly regarded as being based on the scientific method, we are in fact perpetuating Pseudoscience, and Pseudoscience is ridiculous. To help drive home this point, he turns our attention to a well-known Pseudoscience, The Diet Fad Industry, posting a slide with a variety of popular and recent fad diets that have swept the nation over the years. He pokes fun at the weak methods employed by diet fad gurus, and then quickly comments on the connection between diet fads and software developers,

"I think diets are incredibly similar to most software methodology approaches. They all sort of espouse ‘I have the truth. What you need to get slim and healthy is the '10-day Green Smoothie Cleanse!’”
"People want to be told how they can cheat the basics. I think software development is exactly like that. Developers are exactly like people trying to lose 10lbs.”

DHH explains that we all struggle with portions of our code bases that we want to clean up. A nip here, a tuck there, a refactor of all the dirty pieces. And that notion of dirty code, much like an annoying 10lbs, drives us toward taking up the latest gospel pattern or practice, because we are lured by the promise of instantly transforming dirty code into clean code. We often erroneously believe if we just follow a specific set of 10 commandments, then we will write clean code bases till the cows come home. And he further explains there are plenty of developers willing to espouse the next great all slimming, super fat trimming edict for your coding to follow and for you to vehemently enlist and advocate, as any true believing zealot should. 

And then…. with an ever so gentle pull of the trigger…

"The most popular pattern for making people feel shitty about their code, and shitty about themselves, and shitty about their path through programming is... TDD.
TDD is the most successful software diet of all times.”

**BOOM. NUKED.**

This holy hell of a blasphemous war cry takes place approximately 24 minutes into what is a one-hour long keynote.
Boom went the room - you could feel it, hear it, and certainly see it as people took to their phones to blow up the twitter sphere at the same time.
The rest of the keynote hardly matters at this point, because this is where he killed TDD.

I’m not even going to finish summarizing the rest of his talk, because you should just watch it. There are some really great nuggets and fruitful explanation for his positioning, which are important as you navigate through the rest of the plays below.

**April 23 and onward:** The Mushroom Cloud Forms&hellip;

Chaotic tweets ensue with many hailing DHH’s shot to TDD, while others are red-faced and forming lynch mobs. Quite a few are making jokes for both sides. Quickly a volley of opinions are exchanged through tweets and blogs.
I found the blog posts to be the most productive and so I’ve placed the more notable opinions in chronological order below, and I highly recommend reading through them to grasp the whole story. I also worked in a few tweets because well&hellip; some of these cats really do put on a good show.
This certainly doesn’t encompass all things said, or even all viewpoints, and apologies in advance for missing any key posts (just hit me up on Twitter, @BreeThomas33, if I need to add one ), but I’m hoping this provides a path for people (noobs especially of course) to hear the arguments from some of the more seasoned and vocal seniors in the community.
'"

